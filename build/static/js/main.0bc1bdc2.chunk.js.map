{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["fonts","getHex","Math","random","toString","slice","padZero","str","len","Array","join","document","body","onkeyup","a","keyCode","getElementById","classList","add","axios","require","FormData","font","floor","length","bgColor","txtColor","hex","bw","indexOf","Error","r","parseInt","g","b","invertColor","dataForm","append","this","console","log","get","crossDomain","then","response","innerHTML","data","stringLength","className","remove","style","background","setBackground","color","App","href","rel","class","id","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0bc1bdc2.chunk.js","sourcesContent":["import './App.css';\nimport Typist from 'react-typist';\n\n\nvar fonts = ['Roboto',\n  'Open_Sans',\n  'Raleway',\n  'Rakkas',\n  'Abril_Fatface',\n  'Berkshire_Swash',\n  'Arvo',\n  'Spectral',\n  'Germania_one',\n  'Fredoka_one',\n  'Space_mono',\n  'Quantico'\n]\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\" >\n      <link href=\"https://fonts.googleapis.com/css?family=Open+Sans|Raleway|Roboto|Rakkas|Abril+Fatface|Berkshire+Swash|Arvo|Spectral|Germania+One|Fredoka+One|Space+Mono|Quantico\" rel=\"stylesheet\">\n      </link>\n      <header className=\"App-header\">\n        <div class=\"text\">\n          <h1 id=\"apology\">Press spacebar <br></br>to apologize</h1>\n          <div id=\"desc\">\n            <Typist>\n              This project tries to hyperbolize the sociological phenomena of over-apologizing. Apologizing too quickly can come with social consequences—especially for women in a workplace. This is an exploration of an intersection between AI and graphic design. AIpology and visuality are generated on click of a spacebar - living in the moment in the times of corona. The project was supported by the city of Košice.\n            </Typist>\n            <br></br>\n            <img id='imgs2' src='kosice.png' alt='Kosice'></img> &nbsp;&nbsp;&nbsp;\n            <img id='imgs' src='cike.png' alt='Creative industry Kosice'></img>\n\n          </div>\n\n\n        </div>\n      </header>\n    </div >\n  );\n}\n\nfunction getHex() {\n  return '#' + Math.random().toString(16).slice(2, 8);\n}\n\nfunction setBackground() {\n  var bgColor = getHex();\n  document.body.style.background = bgColor;\n}\n\n\ndocument.body.onkeyup = function (a) {\n  if (a.keyCode === 32) {\n    document.getElementById(\"desc\").classList.add('hidden');\n    document.getElementById(\"imgs\").classList.add('hidden');\n    document.getElementById(\"imgs2\").classList.add('hidden');\n    const axios = require('axios');\n    const FormData = require('form-data');\n    var font = fonts[Math.floor(Math.random() * fonts.length)];\n    var bgColor = getHex();\n    var txtColor = invertColor(bgColor);\n    const dataForm = new FormData();\n    dataForm.append('font', this.font);\n    dataForm.append('bgcolor', this.bgColor);\n    dataForm.append('txtcolor', this.txtColor);\n    console.log(font);\n    console.log(bgColor);\n    console.log(txtColor);\n\n    axios.get('https://apologizator.herokuapp.com/generate', { crossDomain: true }).then(function (response) {\n      //console.log(response);\n      document.getElementById(\"apology\").innerHTML = response.data;\n      console.log(response.data);\n      var stringLength = response.data.length;\n      console.log(stringLength);\n      if (stringLength > 50) {\n        document.getElementById(\"apology\").className = font;\n        document.getElementById(\"apology\").classList.add(\"smaller\");\n        console.log('String too long')\n      }\n      else {\n        document.getElementById(\"apology\").className = font;\n        document.getElementById(\"apology\").classList.remove(\"smaller\");\n\n      }\n    }).then(function (response) {\n\n      setBackground();\n      document.getElementById(\"apology\").style.color = txtColor;\n\n\n    });\n\n  }\n}\n\nfunction padZero(str, len) {\n  len = len || 2;\n  var zeros = new Array(len).join('0');\n  return (zeros + str).slice(-len);\n}\n\nfunction invertColor(hex, bw) {\n  if (hex.indexOf('#') === 0) {\n    hex = hex.slice(1);\n  }\n  // convert 3-digit hex to 6-digits.\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  if (hex.length !== 6) {\n    throw new Error('Invalid HEX color.');\n  }\n  var r = parseInt(hex.slice(0, 2), 16),\n    g = parseInt(hex.slice(2, 4), 16),\n    b = parseInt(hex.slice(4, 6), 16);\n  if (bw) {\n    // http://stackoverflow.com/a/3943023/112731\n    return (r * 0.299 + g * 0.587 + b * 0.114) > 186\n      ? '#000000'\n      : '#FFFFFF';\n  }\n  // invert color components\n  r = (255 - r).toString(16);\n  g = (255 - g).toString(16);\n  b = (255 - b).toString(16);\n  // pad each with zeros and return\n  return \"#\" + padZero(r) + padZero(g) + padZero(b);\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'pace-js'\nimport 'pace-js/themes/red/pace-theme-flat-top.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}